{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialValue = {\n  loginObj: {\n    email: \"\",\n    password: \"\"\n  },\n  loginError: {},\n  loginEntries: [],\n  loginBoolean: false,\n  isProfileAvailable: false,\n  admin: false\n};\nconst LoginSlice = createSlice({\n  name: \"LoginReducer\",\n  initialState: initialValue,\n  reducers: {\n    setLoginObj: (state, action) => {\n      state.loginObj = action.payload;\n    },\n    setLoginError: (state, action) => {\n      state.loginError = action.payload;\n    },\n    setLoginEntries: (state, action) => {\n      state.loginEntries = action.payload;\n    },\n    setLoginBoolean: (state, action) => {\n      state.loginBoolean = action.payload;\n    },\n    setIsProfileAvailable: (state, action) => {\n      state.isProfileAvailable = action.payload;\n    },\n    setAdmin: (state, action) => {\n      state.admin = action.payload;\n    }\n  }\n});\nexport default LoginSlice.reducer;\nexport const {\n  setLoginObj,\n  setLoginError,\n  setLoginEntries,\n  setLoginBoolean,\n  setIsProfileAvailable,\n  setAdmin\n} = LoginSlice.actions;","map":{"version":3,"names":["createSlice","initialValue","loginObj","email","password","loginError","loginEntries","loginBoolean","isProfileAvailable","admin","LoginSlice","name","initialState","reducers","setLoginObj","state","action","payload","setLoginError","setLoginEntries","setLoginBoolean","setIsProfileAvailable","setAdmin","reducer","actions"],"sources":["E:/Raghav/Assigment/StaffManageApp/src/Components/Redux/LoginReducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialValue = {\r\n  loginObj:{\r\n    email: \"\",\r\n    password: \"\",\r\n  }, \r\n  loginError:{},\r\n  loginEntries:[],\r\n  loginBoolean:false,\r\n  isProfileAvailable:false,\r\n  admin:false,\r\n    \r\n}\r\nconst LoginSlice = createSlice({\r\n name:\"LoginReducer\",\r\n initialState:initialValue,\r\n reducers:{\r\n  setLoginObj:(state,action)=>{state.loginObj= action.payload},\r\n  setLoginError:(state,action)=>{state.loginError= action.payload},\r\n   setLoginEntries:(state,action)=>{state.loginEntries = action.payload},\r\n   setLoginBoolean:(state,action)=>{state.loginBoolean = action.payload},\r\n   setIsProfileAvailable:(state,action)=>{state.isProfileAvailable = action.payload},\r\n   setAdmin:(state,action)=>{state.admin = action.payload},\r\n  },\r\n})\r\n\r\n\r\nexport default LoginSlice.reducer;\r\nexport const{setLoginObj,setLoginError,setLoginEntries,setLoginBoolean, setIsProfileAvailable,setAdmin}= LoginSlice.actions;"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAC;IACPC,KAAK,EAAE,EADA;IAEPC,QAAQ,EAAE;EAFH,CADU;EAKnBC,UAAU,EAAC,EALQ;EAMnBC,YAAY,EAAC,EANM;EAOnBC,YAAY,EAAC,KAPM;EAQnBC,kBAAkB,EAAC,KARA;EASnBC,KAAK,EAAC;AATa,CAArB;AAYA,MAAMC,UAAU,GAAGV,WAAW,CAAC;EAC9BW,IAAI,EAAC,cADyB;EAE9BC,YAAY,EAACX,YAFiB;EAG9BY,QAAQ,EAAC;IACRC,WAAW,EAAC,CAACC,KAAD,EAAOC,MAAP,KAAgB;MAACD,KAAK,CAACb,QAAN,GAAgBc,MAAM,CAACC,OAAvB;IAA+B,CADpD;IAERC,aAAa,EAAC,CAACH,KAAD,EAAOC,MAAP,KAAgB;MAACD,KAAK,CAACV,UAAN,GAAkBW,MAAM,CAACC,OAAzB;IAAiC,CAFxD;IAGPE,eAAe,EAAC,CAACJ,KAAD,EAAOC,MAAP,KAAgB;MAACD,KAAK,CAACT,YAAN,GAAqBU,MAAM,CAACC,OAA5B;IAAoC,CAH9D;IAIPG,eAAe,EAAC,CAACL,KAAD,EAAOC,MAAP,KAAgB;MAACD,KAAK,CAACR,YAAN,GAAqBS,MAAM,CAACC,OAA5B;IAAoC,CAJ9D;IAKPI,qBAAqB,EAAC,CAACN,KAAD,EAAOC,MAAP,KAAgB;MAACD,KAAK,CAACP,kBAAN,GAA2BQ,MAAM,CAACC,OAAlC;IAA0C,CAL1E;IAMPK,QAAQ,EAAC,CAACP,KAAD,EAAOC,MAAP,KAAgB;MAACD,KAAK,CAACN,KAAN,GAAcO,MAAM,CAACC,OAArB;IAA6B;EANhD;AAHqB,CAAD,CAA9B;AAcA,eAAeP,UAAU,CAACa,OAA1B;AACA,OAAO,MAAK;EAACT,WAAD;EAAaI,aAAb;EAA2BC,eAA3B;EAA2CC,eAA3C;EAA4DC,qBAA5D;EAAkFC;AAAlF,IAA6FZ,UAAU,CAACc,OAA7G"},"metadata":{},"sourceType":"module"}